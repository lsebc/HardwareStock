/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hardwarestock;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author ls
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        this.setLocationRelativeTo(null);
        update();
//        adminUserComboBox.removeAllItems();
//        try {
////            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
////            String url = "jdbc:odbc:Driver={Microsoft Access Driver "
////                    + "(*.mdb, *.accdb)};DBQ=C:\\NetbeansProject\\AccessDB\\HardwareStock.accdb";
////            Connection con = DriverManager.getConnection(url);
//            String url = "jdbc:ucanaccess://T:/(software)/HardwareStock/AccessDB/HardwareStock.accdb";
//            Connection con = DriverManager.getConnection(url);
//            Statement stmt = null;
//            ResultSet rs = null;
//
//            // SQL query command
//            String SQL = "SELECT * FROM USERS";
//            stmt = con.createStatement();
//            rs = stmt.executeQuery(SQL);
//            while (rs.next()) {
//                adminUserComboBox.addItem(rs.getString("id"));
//            }
//            con.close();
//        } catch (SQLException e) {
//            System.out.println("SQL Exception: " + e.toString());
//        } /*catch (ClassNotFoundException cE) {
//            System.out.println("Class Not Found Exception: "
//                    + cE.toString());
//        }*/
    }

    public void update() {
        adminUserComboBox.removeAllItems();
        try {
//            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
//            String url = "jdbc:odbc:Driver={Microsoft Access Driver "
//                    + "(*.mdb, *.accdb)};DBQ=C:\\NetbeansProject\\AccessDB\\HardwareStock.accdb";
//            Connection con = DriverManager.getConnection(url);
//            String url = "jdbc:ucanaccess://T:/(software)/HardwareStock/AccessDB/HardwareStock.accdb";
//            Connection con = DriverManager.getConnection(url);
            Connection con = new DBConn().dbConnection();
            Statement stmt = null;
            ResultSet rs = null;

            // SQL query command
            String SQL = "SELECT * FROM USERS";
            stmt = con.createStatement();
            rs = stmt.executeQuery(SQL);
            while (rs.next()) {
                adminUserComboBox.addItem(rs.getString("id"));
            }
            con.close();
        } catch (SQLException e) {
            System.out.println("SQL Exception: " + e.toString());
        } catch (Exception e) {
            System.out.println("Exception: " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        adminUserComboBox = new javax.swing.JComboBox<>();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        userLabel = new javax.swing.JLabel();
        mMenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        adminUserComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addButton.setText("Add user");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete User");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        userLabel.setText("User:");

        mMenuButton.setText("Return to main menu");
        mMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(userLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(adminUserComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteButton)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminUserComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLabel))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(deleteButton)
                    .addComponent(addButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mMenuButton)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        String aSelected = adminUserComboBox.getSelectedItem().toString();
        JTextField currentUserField = new JTextField(5);
        JPasswordField newUPassField = new JPasswordField(5);
        JPanel myPanel = new JPanel();
        myPanel.add(new JLabel("Current Admin:"));
        myPanel.add(currentUserField);
        myPanel.add(Box.createVerticalStrut(15)); // a spacer
        myPanel.add(new JLabel("New Password:"));
        myPanel.add(newUPassField);
        try {
//            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
//            String url = "jdbc:odbc:Driver={Microsoft Access Driver "
//                    + "(*.mdb, *.accdb)};DBQ=C:\\NetbeansProject\\AccessDB\\HardwareStock.accdb";
//            Connection con = DriverManager.getConnection(url);
            currentUserField.setText(aSelected);
            currentUserField.setEditable(false);
            newUPassField.setEchoChar('*');
            int result = JOptionPane.showConfirmDialog(null, myPanel,
                    "Current Admin Credentials", JOptionPane.OK_CANCEL_OPTION);
            if (result == JOptionPane.OK_OPTION && String.valueOf(newUPassField.getPassword()).isEmpty()) {
                System.out.println("No password entered, changes not made");
            }
            if (result == JOptionPane.CANCEL_OPTION) {
                System.out.println("No changes made");
            } else if (result == JOptionPane.OK_OPTION && !String.valueOf(newUPassField.getPassword()).isEmpty()) {
                int updateUser = JOptionPane.showConfirmDialog(null, "Update user: " + aSelected + "?");
                if (updateUser == JOptionPane.OK_OPTION) {
//                    String url = "jdbc:ucanaccess://T:/(software)/HardwareStock/AccessDB/HardwareStock.accdb";
//                    Connection con = DriverManager.getConnection(url);
                    Connection con = new DBConn().dbConnection();
                    Statement s = con.createStatement();
                    ResultSet rs = s.executeQuery(
                            "SELECT * FROM users where id ='" + aSelected + "'");
                    if (rs.next()) {
                        PreparedStatement pstmt = (PreparedStatement) con.prepareStatement("update users set password=? where id = '" + aSelected + "'");
                        //System.out.println(String.valueOf(newUPassField.getPassword()));
                        //pstmt.setString(1, currentUserField.getText());
                        pstmt.setString(1, String.valueOf(newUPassField.getPassword()));
                        pstmt.executeUpdate();
                        pstmt.close();
                    }
                    System.out.println("Admin updated");
                } else {
                    System.out.println("Admin not updated");
                }
            }
        } catch (SQLException e) {
            System.out.println("SQL Exception: " + e.toString());
        } catch (Exception e) {
            System.out.println("Exception:" + e);
        }
        this.update();
    }//GEN-LAST:event_editButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        JTextField newUserField = new JTextField(5);
        JPasswordField newUPassField = new JPasswordField(5);
        newUPassField.setEchoChar('*');
        JPanel myPanel = new JPanel();

        myPanel.add(new JLabel("New Admin:"));
        myPanel.add(newUserField);
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        myPanel.add(new JLabel("Set Password:"));
        myPanel.add(newUPassField);
        try {
//            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
//            String url = "jdbc:odbc:Driver={Microsoft Access Driver "
//                    + "(*.mdb, *.accdb)};DBQ=C:\\NetbeansProject\\AccessDB\\HardwareStock.accdb";
//            Connection con = DriverManager.getConnection(url);
            int result = JOptionPane.showConfirmDialog(null, myPanel,
                    "Please enter new Admin Credentials", JOptionPane.OK_CANCEL_OPTION);
//            String url = "jdbc:ucanaccess://T:/(software)/HardwareStock/AccessDB/HardwareStock.accdb";
//            Connection con = DriverManager.getConnection(url);
            Connection con = new DBConn().dbConnection();
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery(
                    "SELECT * FROM users where id ='" + newUserField.getText() + "'");
            if (result == JOptionPane.CANCEL_OPTION) {
                //Do nothing
            } else if (newUserField.getText().isEmpty()) {
                System.out.println("Please enter a valid user");
            } else if (newUPassField.getPassword().length <= 0) {
                System.out.println("Please enter a valid password");
            } else if (rs.next()) {
                System.out.println("admin already exists");
            } else if (result == JOptionPane.OK_OPTION) {
                System.out.println("new admin");
                PreparedStatement pstmt = (PreparedStatement) con.prepareStatement("insert into users(id, password) values(?,?)");
                pstmt.setString(1, newUserField.getText());
                pstmt.setString(2, String.valueOf(newUPassField.getPassword()));
                pstmt.executeUpdate();
                pstmt.close();
            }
        } catch (SQLException e) {
            System.out.println("SQL Exception: " + e.toString());
        } catch (Exception e) {
            System.out.println("Exception:" + e);
        }
        this.update();
    }//GEN-LAST:event_addButtonActionPerformed

    private void mMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mMenuButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_mMenuButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String aSelected = adminUserComboBox.getSelectedItem().toString();
        int delUser = JOptionPane.showConfirmDialog(rootPane, "Delete user: " + aSelected + "?");
        try {
//            String url = "jdbc:ucanaccess://T:/(software)/HardwareStock/AccessDB/HardwareStock.accdb";
//            Connection con = DriverManager.getConnection(url);
            Connection con = new DBConn().dbConnection();
            Statement s = null;
            ResultSet rs = null;

            // SQL query command
            s = con.createStatement();
            rs = s.executeQuery(
                    "SELECT * FROM users where id ='" + aSelected + "'");
            if (rs.next()) {
                if (delUser == JOptionPane.YES_OPTION) {
                    s.executeUpdate("delete from users where id = " + "'" + aSelected + "'");
                    con.close();
                }
            }
        } catch (Exception e) {
            System.out.println("Exception: " + e);
        }
        this.update();
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JComboBox<String> adminUserComboBox;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton mMenuButton;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
